-- MySQL Script generated by MySQL Workbench
-- Sat Dec 17 10:32:21 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering



-- -----------------------------------------------------
-- Schema barbearia
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema barbearia
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS barbearia;

-- -----------------------------------------------------
-- Table barbearia.Estoque
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS barbearia.Estoque (
  idEstoque SERIAL NOT NULL ,
  Data_de_Entrada VARCHAR(45) NOT NULL,
  Quantidade VARCHAR(45) NOT NULL,
  Validade DATE NOT NULL,
  Lote VARCHAR(45) NOT NULL,
  Data_de_Fabricacao timestamp NOT NULL,
  PRIMARY KEY (idEstoque));


-- -----------------------------------------------------
-- Table barbearia.Produto
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS barbearia.Produto (
  idProduto SERIAL NOT NULL ,
  Nome VARCHAR(45) NOT NULL,
  Preco_de_Venda VARCHAR(45) NOT NULL,
  Preco_de_Custo VARCHAR(45) NOT NULL,
  Estoque_idEstoque INT NOT NULL,
  PRIMARY KEY (idProduto),
  CONSTRAINT fk_Produto_Estoque1
    FOREIGN KEY (Estoque_idEstoque)
    REFERENCES barbearia.Estoque (idEstoque)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table barbearia.Departamento
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS barbearia.Departamento (
  idDepartamento SERIAL NOT NULL ,
  Nome VARCHAR(45) NOT NULL,
  Salario_Fixo VARCHAR(45) NOT NULL,
  PRIMARY KEY (idDepartamento));


-- -----------------------------------------------------
-- Table barbearia.Servico
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS barbearia.Servico (
  idServico SERIAL NOT NULL ,
  Nome VARCHAR(45) NOT NULL,
  Preco VARCHAR(45) NOT NULL,
  Tempo_de_Atendimento VARCHAR(45) NOT NULL,
  Departamento_idDepartamento INT NOT NULL,
  PRIMARY KEY (idServico),
  CONSTRAINT fk_Servico_Departamento1
    FOREIGN KEY (Departamento_idDepartamento)
    REFERENCES barbearia.Departamento (idDepartamento)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table barbearia.Localizacao
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS barbearia.Localizacao (
  idEndereco SERIAL NOT NULL ,
  CEP VARCHAR(45) NOT NULL,
  Pais VARCHAR(45) NOT NULL,
  Estado VARCHAR(45) NOT NULL,
  Cidade VARCHAR(45) NOT NULL,
  Bairro VARCHAR(45) NOT NULL,
  Logradouro VARCHAR(45) NOT NULL,
  Numero VARCHAR(45) NOT NULL,
  Complemento VARCHAR(45) NULL,
  Tipo_Endereco VARCHAR(45) NULL,
  PRIMARY KEY (idEndereco));


-- -----------------------------------------------------
-- Table barbearia.Profissional
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS barbearia.Profissional (
  idMatricula SERIAL NOT NULL ,
  Data_de_Admissao DATE NOT NULL,
  Nome VARCHAR(45) NOT NULL,
  Email VARCHAR(45) NOT NULL,
  CPFouCNPJ VARCHAR(45) NOT NULL,
  Departamento_idDepartamento INT NOT NULL,
  Localizacao_idEndereco INT NOT NULL,
  PRIMARY KEY (idMatricula),
  CONSTRAINT fk_Profissional_Departamento1
    FOREIGN KEY (Departamento_idDepartamento)
    REFERENCES barbearia.Departamento (idDepartamento)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Profissional_Localizacao1
    FOREIGN KEY (Localizacao_idEndereco)
    REFERENCES barbearia.Localizacao (idEndereco)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table barbearia.Cliente
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS barbearia.Cliente (
  idMatricula SERIAL NOT NULL ,
  Nome VARCHAR(45) NOT NULL,
  Email VARCHAR(45) NOT NULL,
  Genero VARCHAR(45) NOT NULL,
  Localizacao_idEndereco INT NOT NULL,
  PRIMARY KEY (idMatricula),
  CONSTRAINT fk_Cliente_Localizacao1
    FOREIGN KEY (Localizacao_idEndereco)
    REFERENCES barbearia.Localizacao (idEndereco)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table barbearia.Atendimento
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS barbearia.Atendimento (
  idAtendimento SERIAL NOT NULL ,
  ConfirmadoouCancelado BOOLEAN NOT NULL,
  Data_Solicitacao DATE NOT NULL,
  Tempo_de_Atendimento INT NOT null check(Tempo_de_Atendimento>0),
  Data_Agendamento DATE NOT NULL,
  Preco_Total MONEY NOT null,
  Inicio_do_Atendimento TIMESTAMP NULL,
  Final_do_Atendimento TIMESTAMP NULL,
  Cliente_idMatricula INT NOT NULL,
  Forma_de_Pagamento VARCHAR(45) NULL,
  Desconto MONEY NULL,
  PRIMARY KEY (idAtendimento),
  CONSTRAINT fk_Atendimento_Cliente1
    FOREIGN KEY (Cliente_idMatricula)
    REFERENCES barbearia.Cliente (idMatricula)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table barbearia.Item_Venda
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS barbearia.Item_Venda (
  idItem_Venda SERIAL NOT NULL ,
  Quantidade INT NULL,
  Preco_Unitario MONEY NOT NULL,
  Atendimento_idAtendimento INT NOT NULL,
  Produto_idProduto INT NOT NULL,
  PRIMARY KEY (idItem_Venda, Atendimento_idAtendimento, Produto_idProduto),
  CONSTRAINT fk_Item_Venda_Atendimento1
    FOREIGN KEY (Atendimento_idAtendimento)
    REFERENCES barbearia.Atendimento (idAtendimento)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Item_Venda_Produto1
    FOREIGN KEY (Produto_idProduto)
    REFERENCES barbearia.Produto (idProduto)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table barbearia.Item_Compra
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS barbearia.Item_Compra (
  idItem_Compra SERIAL NOT NULL ,
  Quantidade INT  NOT null check(Quantidade>0),
  Valor_Item MONEY NOT NULL,
  Preco_Total MONEY NOT NULL,
  Produto_idProduto INT NOT NULL,
  PRIMARY KEY (idItem_Compra, Produto_idProduto),
  CONSTRAINT fk_Item_Compra_Produto1
    FOREIGN KEY (Produto_idProduto)
    REFERENCES barbearia.Produto (idProduto)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table barbearia.Fornecedor
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS barbearia.Fornecedor (
  idFornecedor SERIAL NOT NULL ,
  CNPJ VARCHAR(45) NOT NULL,
  Nome VARCHAR(45) NOT NULL,
  Localizacao_idEndereco INT NOT NULL,
  PRIMARY KEY (idFornecedor),
  CONSTRAINT fk_Fornecedor_Localizacao1
    FOREIGN KEY (Localizacao_idEndereco)
    REFERENCES barbearia.Localizacao (idEndereco)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table barbearia.Ordem_de_Compra
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS barbearia.Ordem_de_Compra (
  idOrdem_de_Compra SERIAL NOT NULL ,
  Data_de_Compra DATE NOT NULL,
  Preco_Total MONEY NOT NULL,
  Fornecedor_idFornecedor INT NOT NULL,
  Departamento_idDepartamento INT NOT NULL,
  PRIMARY KEY (idOrdem_de_Compra),
  CONSTRAINT fk_Ordem_de_Compra_Fornecedor1
    FOREIGN KEY (Fornecedor_idFornecedor)
    REFERENCES barbearia.Fornecedor (idFornecedor)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Ordem_de_Compra_Departamento1
    FOREIGN KEY (Departamento_idDepartamento)
    REFERENCES barbearia.Departamento (idDepartamento)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table barbearia.Telefone
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS barbearia.Telefone (
  idTelefone SERIAL NOT NULL ,
  DDD INT NOT NULL,
  Numero INT NOT NULL,
  Profissional_idMatricula INT NULL,
  Cliente_idMatricula INT NULL,
  Fornecedor_idFornecedor INT NULL,
  Tipo_Telefone VARCHAR(45) NOT NULL,
  PRIMARY KEY (idTelefone),
  CONSTRAINT fk_Telefone_Profissional1
    FOREIGN KEY (Profissional_idMatricula)
    REFERENCES barbearia.Profissional (idMatricula)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Telefone_Cliente1
    FOREIGN KEY (Cliente_idMatricula)
    REFERENCES barbearia.Cliente (idMatricula)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Telefone_Fornecedor1
    FOREIGN KEY (Fornecedor_idFornecedor)
    REFERENCES barbearia.Fornecedor (idFornecedor)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table barbearia.Produto_has_Servico
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS barbearia.Produto_has_Servico (
  Produto_idProduto INT NOT NULL,
  Servico_idServico INT NOT NULL,
  PRIMARY KEY (Produto_idProduto, Servico_idServico),
  CONSTRAINT fk_Produto_has_Servico_Produto1
    FOREIGN KEY (Produto_idProduto)
    REFERENCES barbearia.Produto (idProduto)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Produto_has_Servico_Servico1
    FOREIGN KEY (Servico_idServico)
    REFERENCES barbearia.Servico (idServico)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table barbearia.Servico_has_Atendimento
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS barbearia.Servico_has_Atendimento (
  Servico_idServico INT NOT NULL,
  Atendimento_idAtendimento INT NOT NULL,
  Profissional_idMatricula INT NOT NULL,
  PRIMARY KEY (Servico_idServico, Atendimento_idAtendimento, Profissional_idMatricula),
  CONSTRAINT fk_Servico_has_Atendimento_Servico1
    FOREIGN KEY (Servico_idServico)
    REFERENCES barbearia.Servico (idServico)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Servico_has_Atendimento_Atendimento1
    FOREIGN KEY (Atendimento_idAtendimento)
    REFERENCES barbearia.Atendimento (idAtendimento)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Servico_has_Atendimento_Profissional1
    FOREIGN KEY (Profissional_idMatricula)
    REFERENCES barbearia.Profissional (idMatricula)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);




-- -----------------------------------------------------
-- Table barbearia.Produto_has_Fornecedor
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS barbearia.Produto_has_Fornecedor (
  Produto_idProduto INT NOT NULL,
  Fornecedor_idFornecedor INT NOT NULL,
  PRIMARY KEY (Produto_idProduto, Fornecedor_idFornecedor),
  CONSTRAINT fk_Produto_has_Fornecedor_Produto1
    FOREIGN KEY (Produto_idProduto)
    REFERENCES barbearia.Produto (idProduto)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Produto_has_Fornecedor_Fornecedor1
    FOREIGN KEY (Fornecedor_idFornecedor)
    REFERENCES barbearia.Fornecedor (idFornecedor)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);